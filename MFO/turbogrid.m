function turbogrid(Ge,k,tolerance,meshnumber,opt_filepath,newfolder_filepath)
file1=sprintf('%s%s%d%s',newfolder_filepath,'/blade',Ge*1000+k,'.tse');
fid1=fopen(file1,'w');
fprintf(fid1,'%s\n','GEOMETRY:');
fprintf(fid1,'%s\n','  INLET:');
fprintf(fid1,'%s\n','    Generate Intermediate Points = On');
fprintf(fid1,'%s\n','    Hub Angle = 0.0 [degree]');
fprintf(fid1,'%s\n','    Input Filename =');
fprintf(fid1,'%s\n','    Opening Mode = Fully extend');
fprintf(fid1,'%s\n','    Override Automatic Angles = Off');
fprintf(fid1,'%s\n','    Parametric Hub Location = 0.5');
fprintf(fid1,'%s\n','    Parametric Shroud Location = 0.5');
fprintf(fid1,'%s\n','    Shroud Angle = 0.0 [degree]');
fprintf(fid1,'%s\n','    Toggle Trim = Off');
fprintf(fid1,'%s\n','    Trim AR Location Method = Set A');
fprintf(fid1,'%s\n','    Trim Hub Position = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Intersection Point 1 = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Intersection Point 2 = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Shroud Position = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Use Simple Conic Surface = Off');
fprintf(fid1,'%s\n','    GEO POINT:Low Hub Point');
fprintf(fid1,'%s\n','      Visibility = On');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','    GEO POINT:Low Shroud Point');
fprintf(fid1,'%s\n','      Visibility = On');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','GEOMETRY:');
fprintf(fid1,'%s\n','  OUTLET:');
fprintf(fid1,'%s\n','    Curve Representation = Piece-wise linear');
fprintf(fid1,'%s\n','    Generate Intermediate Points = On');
fprintf(fid1,'%s\n','    Hub Angle = 0.0 [degree]');
fprintf(fid1,'%s\n','    Input Filename =');
fprintf(fid1,'%s\n','    Meridional Splitter Filename =');
fprintf(fid1,'%s\n','    Meridional Splitter Interface Hub Parametric Location = 0.5');
fprintf(fid1,'%s\n','    Meridional Splitter Interface Shroud Parametric Location = 0.5');
fprintf(fid1,'%s\n','    Opening Mode = Fully extend');
fprintf(fid1,'%s\n','    Override Automatic Angles = Off');
fprintf(fid1,'%s\n','    Parametric Hub Location = 0.5');
fprintf(fid1,'%s\n','    Parametric Shroud Location = 0.5');
fprintf(fid1,'%s\n','    Shroud Angle = 0.0 [degree]');
fprintf(fid1,'%s\n','    Toggle Trim = Off');
fprintf(fid1,'%s\n','    Trim AR Location Method = Set A');
fprintf(fid1,'%s\n','    Trim Hub Position = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Intersection Point 1 = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Intersection Point 2 = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Trim Shroud Position = 0 [m], 0 [m]');
fprintf(fid1,'%s\n','    Use Simple Conic Surface = Off');
fprintf(fid1,'%s\n','    GEO POINT:Low Hub Point');
fprintf(fid1,'%s\n','      Visibility = On');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','    GEO POINT:Low Shroud Point');
fprintf(fid1,'%s\n','      Visibility = On');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','# Setting Single View: /VIEW:Imported Geometry');
fprintf(fid1,'%s\n','VIEWPORT MANAGER:');
fprintf(fid1,'%s\n','  Viewport Layout = No Split');
fprintf(fid1,'%s\n','  Maximized Viewport = -1');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','GEOMETRY:');
fprintf(fid1,'%s\n','  Input Mode = Profile Points');
fprintf(fid1,'%s\n','  CAD:');
fprintf(fid1,'%s\n','    File Name =');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  MACHINE DATA:');
fprintf(fid1,'%s\n','    Rotation Axis Type = Principal Axis');
fprintf(fid1,'%s\n','    Principal Axis = Z');
fprintf(fid1,'%s\n','    Rotation Axis From = 0 , 0 , 0');
fprintf(fid1,'%s\n','    Rotation Axis To = 1 , 0 , 0');
fprintf(fid1,'%s\n','    Bladeset Count = 3');
fprintf(fid1,'%s\n','    Override Upstream Geometry Options = Off');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  HUB:');
%===========================================================================
fprintf(fid1,'%s%s%s%d%s\n','    Input Filename = ',opt_filepath,'/hub',Ge*1000+k,'.crv');
%===========================================================================
fprintf(fid1,'%s\n','    Coordinate Frame Type = Cartesian');
fprintf(fid1,'%s\n','    Input Angle Units = degree');
fprintf(fid1,'%s\n','    Input Length Units = mm');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  SHROUD:');
%===========================================================================
fprintf(fid1,'%s%s%s%d%s\n','    Input Filename = ',opt_filepath,'/shroud',Ge*1000+k,'.crv');
%===========================================================================
fprintf(fid1,'%s\n','    Coordinate Frame Type = Cartesian');
fprintf(fid1,'%s\n','    Input Angle Units = degree');
fprintf(fid1,'%s\n','    Input Length Units = mm');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      Blade Type = Main');
fprintf(fid1,'%s\n','      Colour = 1,1,1');
fprintf(fid1,'%s\n','      Colour Mode = Constant');
fprintf(fid1,'%s\n','      Draw Faces = On');
fprintf(fid1,'%s\n','      Draw Lines = Off');
fprintf(fid1,'%s\n','      Colour Mode = Constant');
fprintf(fid1,'%s\n','      Colour = 0.55, 0.55, 0.59');
fprintf(fid1,'%s\n','      Visibility = On');
fprintf(fid1,'%s\n','      Show Surface = Yes');
fprintf(fid1,'%s\n','      Apply Instancing Transform = Yes');
fprintf(fid1,'%s\n','      Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform');
fprintf(fid1,'%s\n','      Hub Name For Blade = ../HUB');
fprintf(fid1,'%s\n','      Shroud Name For Blade = ../SHROUD');
fprintf(fid1,'%s\n','      Theta Controllers For Blade = ../INLET,../OUTLET');
fprintf(fid1,'%s\n','      Leading Edge Method = Low A');
fprintf(fid1,'%s\n','      Trailing Edge Method = High A');
fprintf(fid1,'%s\n','      Tip Names For Blade = ../BLADE SET/HUB TIP,../BLADE SET/SHROUD TIP');
fprintf(fid1,'%s\n','      Tip Names For Blade Distance = ../BLADE SET/HUB TIP,../BLADE SET/SHROUD TIP');
fprintf(fid1,'%s\n','      Coordinate Frame Type = Cartesian');
fprintf(fid1,'%s\n','      Input Angle Units = degree');
fprintf(fid1,'%s\n','      Input Length Units = m');
fprintf(fid1,'%s\n','      Surface Representation = Bspline');
fprintf(fid1,'%s\n','      Blade Surface Creation Method = Loft Spanwise');
fprintf(fid1,'%s\n','      Curve Representation = Bspline');
fprintf(fid1,'%s\n','      Geometric Representation = Specify');
fprintf(fid1,'%s\n','      Has Fillet = off');
fprintf(fid1,'%s\n','      Parametric Surface Smoother Mode = Automatic');
fprintf(fid1,'%s\n','      Show Surface Representations = false');
fprintf(fid1,'%s\n','      Display Trimmed Surfaces = true');
fprintf(fid1,'%s\n','      Locate Leading And Trailing Edges From Average = true');
fprintf(fid1,'%s\n','      Ignore Leading And Trailing Tags From Profiles = false');
fprintf(fid1,'%s\n','      Simplify Curves = Off');
fprintf(fid1,'%s\n','      Leading Edge Type = Single');
fprintf(fid1,'%s\n','      Trailing Edge Type = Single');
fprintf(fid1,'%s\n','      Blade Edge Detection Space = Auto');
fprintf(fid1,'%s\n','      Enable Hub Tip = true');
fprintf(fid1,'%s\n','      Enable Shroud Tip = true');
fprintf(fid1,'%s\n','      Parametric Surface Generation Smoother = Elliptic');
fprintf(fid1,'%s\n','      Blade Edge Detection Space = Auto');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      COMBINED TRANSFORM: Blade Transform');
fprintf(fid1,'%s\n','        SIMPLE TRANSFORM: Axial Rotation');
fprintf(fid1,'%s\n','          Option = Rotation');
fprintf(fid1,'%s\n','          Rotation Option = Machine Axis');
fprintf(fid1,'%s\n','          Rotation Angle = 0 [degree]');
fprintf(fid1,'%s\n','          Machine Data = /GEOMETRY/MACHINE DATA');
fprintf(fid1,'%s\n','        END');
fprintf(fid1,'%s\n','      END');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      COMBINED TRANSFORM: Blade Transform');
fprintf(fid1,'%s\n','        SIMPLE TRANSFORM: Translation');
fprintf(fid1,'%s\n','          Option = Translation');
fprintf(fid1,'%s\n','          Translation Option = Machine Axis');
fprintf(fid1,'%s\n','          Machine Data = /GEOMETRY/MACHINE DATA');
fprintf(fid1,'%s\n','          Translation Distance = 0');
fprintf(fid1,'%s\n','        END');
fprintf(fid1,'%s\n','      END');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      COMBINED TRANSFORM: Blade Transform');
fprintf(fid1,'%s\n','        SIMPLE TRANSFORM: General Rotation');
fprintf(fid1,'%s\n','          Option = Rotation');
fprintf(fid1,'%s\n','          Rotation Option = General Axis');
fprintf(fid1,'%s\n','          Rotation Axis From = 0,0,0');
fprintf(fid1,'%s\n','          Rotation Axis To = 0,0,1');
fprintf(fid1,'%s\n','          Machine Data = /GEOMETRY/MACHINE DATA');
fprintf(fid1,'%s\n','        END');
fprintf(fid1,'%s\n','      END');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      COMBINED TRANSFORM: Blade Transform');
fprintf(fid1,'%s\n','        Simple Transform List =');
fprintf(fid1,'%s\n','      END');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      Affine Transform = BLADE:ExportPoints1/COMBINED TRANSFORM:Blade Transform');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    BLADE: ExportPoints1');
fprintf(fid1,'%s\n','      Blade Number = 0');
%===========================================================================
fprintf(fid1,'%s%s%s%d%s\n','      Input Filename = ',opt_filepath,'/blade',Ge*1000+k,'.crv');
%===========================================================================
fprintf(fid1,'%s\n','      Coordinate Frame Type = Cartesian');
fprintf(fid1,'%s\n','      Input Angle Units = degree');
fprintf(fid1,'%s\n','      Input Length Units = mm');
fprintf(fid1,'%s\n','      Leading Edge Type = Single');
fprintf(fid1,'%s\n','      Trailing Edge Type = Single');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    Blade List Surface Link = BLADE SET/BLADE:ExportPoints1');
fprintf(fid1,'%s\n','    Blade List Tolerance Link = BLADE SET/BLADE:ExportPoints1');
fprintf(fid1,'%s\n','    Blade List Edges Link = BLADE SET/BLADE:ExportPoints1');
fprintf(fid1,'%s\n','    Blade List Tip Link = BLADE SET/BLADE:ExportPoints1');
fprintf(fid1,'%s\n','    Blade List Extend Link = BLADE SET/BLADE:ExportPoints1');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','> delete /GEOMETRY/BLADE SET/BLADE:Blade 1');
fprintf(fid1,'%s\n','VIEWPORT MANAGER:');
fprintf(fid1,'%s\n','  Viewport Layout = No Split');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','TOPOLOGY SET:');
% fprintf(fid1,'%s\n','  Conformal Tip Enabled = Off');
fprintf(fid1,'%s\n','  Split Mesh Regions At Leading Edge = Off');
fprintf(fid1,'%s\n','  Split Mesh Regions At Trailing Edge = Off');
fprintf(fid1,'%s\n','  Override ATM Topology List = False');
fprintf(fid1,'%s\n','  Override ATM Topology Choice = True');
fprintf(fid1,'%s\n','  ATM Topology Choice = Single Round Round Symmetric');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','GEOMETRY:');
fprintf(fid1,'%s\n','  BLADE SET:');
fprintf(fid1,'%s\n','    SHROUD TIP:');
fprintf(fid1,'%s\n','      Option = Normal Distance');
fprintf(fid1,'%s\n','      Span Location = 0.95');
fprintf(fid1,'%s%3.3f%s\n','      Tip Clearance = ',tolerance/10,' [cm]');
fprintf(fid1,'%s%3.3f%s\n','      Tip Clearance At Leading Edge = ',tolerance/10,' [cm]');
fprintf(fid1,'%s%3.3f%s\n','      Tip Clearance At Trailing Edge = ',tolerance/10,' [cm]');
fprintf(fid1,'%s\n','      Tip Profile Number = 10');
fprintf(fid1,'%s\n','    END');
fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','MESH DATA:');
fprintf(fid1,'%s\n','  ATM Five Star Vertex Mesh Size Factor = 1.0');
fprintf(fid1,'%s\n','  ATM Proportional BL Factor Base = 3.0');
fprintf(fid1,'%s\n','  ATM Proportional BL Factor Ratio = 0.0');
fprintf(fid1,'%s\n','  ATM Spanwise To B2B Count Factor = 1.0');
fprintf(fid1,'%s\n','  Between Boundary Layers Distribution Option = End Ratio');
fprintf(fid1,'%s\n','  Between Boundary Layers End Ratio = 10');
fprintf(fid1,'%s\n','  Between Boundary Layers Number Of Const Elements = 2');
fprintf(fid1,'%s\n','  Between Boundary Layers Number Of Elements = 10');
fprintf(fid1,'%s\n','  Boundary Layer Specification Method = Proportional');
fprintf(fid1,'%s\n','  Global Size Factor = 1.0');
fprintf(fid1,'%s\n','  HGrid At Inlet = on');
fprintf(fid1,'%s\n','  HGrid At Outlet = on');
fprintf(fid1,'%s\n','  HGrid in Parametric Space at Inlet = Off');
fprintf(fid1,'%s\n','  HGrid in Parametric Space at Outlet = Off');
fprintf(fid1,'%s\n','  Hub Boundary Layer Distribution Option = Element Count and Size');
fprintf(fid1,'%s\n','  Hub Boundary Layer Expansion Rate = 1.15');
fprintf(fid1,'%s\n','  Hub Boundary Layer Number Of Elements = 5');
fprintf(fid1,'%s\n','  Hub Boundary Layer Offset = 0.1');
fprintf(fid1,'%s\n','  Hub End Ratio = 200');
fprintf(fid1,'%s\n','  Hub Tip Distribution Option = End Ratio');
fprintf(fid1,'%s\n','  Hub Tip End Ratio = 15');
fprintf(fid1,'%s\n','  Hub Tip Vertex Distance = 0.01 [m]');
fprintf(fid1,'%s\n','  Hub Tip Vertex Offset = 0.1');
fprintf(fid1,'%s\n','  Hub Tip Vertex YPlus = 1');
fprintf(fid1,'%s\n','  Hub Vertex Distance = 0.001 [m]');
fprintf(fid1,'%s\n','  Hub Vertex Offset = 0.05');
fprintf(fid1,'%s\n','  Hub Vertex YPlus = 1');
fprintf(fid1,'%s\n','  Inlet Default Growth Ratio = 1.2');
fprintf(fid1,'%s\n','  Inlet Defining Parameter Type = Target Expansion Rate');
fprintf(fid1,'%s\n','  Inlet Domain = Off');
fprintf(fid1,'%s\n','  Inlet Max Aspect Ratio = 900');
fprintf(fid1,'%s\n','  Inlet Multi Segment Enabled = On');
fprintf(fid1,'%s\n','  Inlet Multi Segment First Element Factor = 0.1');
fprintf(fid1,'%s\n','  LE Cutoff Edge Split Factor = 1.0');
fprintf(fid1,'%s\n','  Meridional Splitter Boundary Layer Factor = 1.0');
fprintf(fid1,'%s\n','  Mesh Size Specification Mode = Target Total Node Count');
fprintf(fid1,'%s\n','  Number Of Constant Hub Tip Elements = 0');
fprintf(fid1,'%s\n','  Number Of Constant Shroud Tip Elements = 0');
fprintf(fid1,'%s\n','  Number Of Constant Spanwise Blade Elements = 60');
fprintf(fid1,'%s\n','  Number Of Elements Per Block Edge = 2');
fprintf(fid1,'%s\n','  Number Of Hub Tip Elements = 4');
fprintf(fid1,'%s\n','  Number Of Inlet Elements = 5');
fprintf(fid1,'%s\n','  Number Of Outlet Elements = 5');
fprintf(fid1,'%s\n','  Number Of Shroud Tip Elements = 4');
fprintf(fid1,'%s\n','  Number Of Spanwise Blade Elements = 100');
fprintf(fid1,'%s\n','  Outlet Default Growth Ratio = 1.2');
fprintf(fid1,'%s\n','  Outlet Defining Parameter Type = Target Expansion Rate');
fprintf(fid1,'%s\n','  Outlet Domain = Off');
fprintf(fid1,'%s\n','  Outlet Max Aspect Ratio = 900');
fprintf(fid1,'%s\n','  Outlet Multi Segment Enabled = On');
fprintf(fid1,'%s\n','  Outlet Multi Segment First Element Factor = 0.1');
fprintf(fid1,'%s\n','  Override Inlet Distribution = Off');
fprintf(fid1,'%s\n','  Override Outlet Distribution = Off');
fprintf(fid1,'%s\n','  Reynolds Number = 1.0e6');
fprintf(fid1,'%s\n','  Blade Tip First Element Size Factor = 1.15');
fprintf(fid1,'%s\n','  Shroud Boundary Layer Distribution Option = Element Count and Size');
fprintf(fid1,'%s\n','  Shroud Boundary Layer Expansion Rate = 1.15');
fprintf(fid1,'%s\n','  Shroud Boundary Layer Number Of Elements = 5');
fprintf(fid1,'%s\n','  Shroud Boundary Layer Offset = 0.1');
fprintf(fid1,'%s\n','  Shroud Tip Distribution Option = End Ratio');
fprintf(fid1,'%s\n','  Shroud Tip End Ratio = 15');
fprintf(fid1,'%s\n','  Shroud Tip Vertex Distance = 0.01 [m]');
fprintf(fid1,'%s\n','  Shroud Tip Vertex Offset = 0.1');
fprintf(fid1,'%s\n','  Shroud Tip Vertex YPlus = 1');
fprintf(fid1,'%s\n','  Use Blade Tip First Element Size Factor = Off');
fprintf(fid1,'%s\n','  Shroud Vertex Distance = 0.05 [m]');
fprintf(fid1,'%s\n','  Shroud Vertex Offset = 0.05');
fprintf(fid1,'%s\n','  Shroud Vertex YPlus = 1');
fprintf(fid1,'%s\n','  Spanwise Blade Distribution Option = Element Count and Size');
fprintf(fid1,'%s\n','  TE Cutoff Edge Split Factor = 1.0');
fprintf(fid1,'%s\n','  Target Maximum Expansion Rate = 1.3');
fprintf(fid1,'%s\n','  Target Maximum Expansion Rate Enabled = On');
fprintf(fid1,'%s\n','  Target Mesh Granularity = Specify');
%===========================================================================
fprintf(fid1,'%s%d\n','  Target Mesh Node Count = ',meshnumber);
%===========================================================================
fprintf(fid1,'%s\n','  Vertex Offset Specification Mode = Absolute');
fprintf(fid1,'%s\n','  BLADE MESH DATA: ExportPoints1');
fprintf(fid1,'%s\n','    ATM Hub Tip Maximum Expansion Rate = 1.3');
fprintf(fid1,'%s\n','    ATM Hub Tip Maximum Expansion Rate Enabled = Off');
fprintf(fid1,'%s\n','    ATM Shroud Tip Maximum Expansion Rate = 1.3');
fprintf(fid1,'%s\n','    ATM Shroud Tip Maximum Expansion Rate Enabled = Off');
fprintf(fid1,'%s\n','    Cutoff Blade Edge Expansion Factor = 0.5');
fprintf(fid1,'%s\n','    GGI Tip Hub Le Cut Off MeanLine Method = Auto');
fprintf(fid1,'%s\n','    GGI Tip Hub Te Cut Off MeanLine Method = Auto');
fprintf(fid1,'%s\n','    GGI Tip Shroud Le Cut Off MeanLine Method = Auto');
fprintf(fid1,'%s\n','    GGI Tip Shroud Te Cut Off MeanLine Method = Auto');
fprintf(fid1,'%s\n','    Number Of Elements Across Hub Tip = 0');
fprintf(fid1,'%s\n','    Number Of Elements Across Shroud Tip = 0');
fprintf(fid1,'%s\n','    Number Of Leading Edge Hub Tip Elements = 2');
fprintf(fid1,'%s\n','    Number Of Leading Edge Shroud Tip Elements = 2');
fprintf(fid1,'%s\n','    Number Of Trailing Edge Hub Tip Elements = 2');
fprintf(fid1,'%s\n','    Number Of Trailing Edge Shroud Tip Elements = 2');
fprintf(fid1,'%s\n','    Override Hub Tip Element Count Calculation = Off');
fprintf(fid1,'%s\n','    Override Shroud Tip Element Count Calculation = Off');
fprintf(fid1,'%s\n','  END');
% fprintf(fid1,'%s\n','  EDGE SPLIT CONTROL: Blade 1 Boundary Layer Control');
% fprintf(fid1,'%s\n','    Split Factor = 2.0');
% fprintf(fid1,'%s\n','    Target First Element Offset = 0.01 [m]');
% fprintf(fid1,'%s\n','    Target First Element YPlus = 1');
% fprintf(fid1,'%s\n','  END');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','MESH DATA:');
fprintf(fid1,'%s\n','  Override Outlet Element Count Calculation = 0');
fprintf(fid1,'%s\n','  Outlet Default Growth Ratio = 1.2');
fprintf(fid1,'%s\n','  Outlet Multi Segment Enabled = On');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','LAYERS:');
fprintf(fid1,'%s\n','  Intermediate Layer Insertion Mode = Manual Uniform');
fprintf(fid1,'%s\n','  Requested Layer Count = 30');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','MESH DATA:');
fprintf(fid1,'%s\n','  Spanwise Curve Type=Bspline');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','TOPOLOGY SET:');
fprintf(fid1,'%s\n','  Lock Down ATM Mesh Size = Off');
fprintf(fid1,'%s\n','END');
fprintf(fid1,'%s\n','> um mode=normal, object=/TOPOLOGY SET');
fprintf(fid1,'%s%s%s%d%s\n','> savemesh filename=',opt_filepath,'/blade',Ge*1000+k,'.def, onedomain=true, single=Off, units=mm, solver=cfx5');
fprintf(fid1,'%s%s%s%d%s\n','> savemesh filename=',opt_filepath,'/blade',Ge*1000+k,'.gtm, onedomain=true, single=Off, units=mm, solver=cfx5');
fclose(fid1);
end