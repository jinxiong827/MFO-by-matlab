clc;clear;close all
No_initial=150;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
No_blade=21;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
No_blade_mid=11;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
No_blade_point=100;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
profile='NACA';%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
ro=1.2;
No_fan=10;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Pt_design=[25	100	25	100	25	100	25 50 150	150]; %static pressure (pa)%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Q_design=[40000	60000	15000	70000	20000	80000	10000	40000	90000	150000]; %volumn flow (m3/h)%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D2_design=[1	1	0.8	1.1	0.9	1.2	0.7	1.29	1.3	1.6]; %diameter (m)%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
N_design=[900	1400	750	1400	750	1400	900	600	1400	1400];%rotation speed%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
blade_filepath='/test4T/xiongjin/57fanopt/56';% running path
pre_filepath='\ansys_inc\v190\CFX\bin'; %ansys path
pre_filepathl=replace(pre_filepath,'\','/');
Zin=200;
Zout=-200;
tolerance=[2	2	2	2.5	2.5	2.5	3	3	3	4];% tip tolerance distance%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
%% scale
if size(Q_design,2)~=No_fan || size(D2_design,2)~=No_fan || size(N_design,2)~=No_fan
    error('wrong input')
end
u2=pi.*D2_design.*N_design/60;
r2=D2_design/2;
% Pt_design=P_design+0.5*(Q_design*4/3600./(pi.*D2_design.^2)).^2*ro;
Qbar=Q_design./3600./((pi/4).*D2_design.^2.*u2);%flow coefficient
Pbar=Pt_design/ro./u2.^2;%pressure coefficient
Nbar=1000*N_design./((pi/4).*D2_design.^2*ro.*u2.^5);
ns=14.8*Qbar.^0.5./Pbar.^0.75;
Ns=N_design.*(Q_design./3600).^0.5./Pt_design.^0.75;
%
N_median=median_value(N_design);
D2_median=median_value(D2_design);
tolerance_median=median_value(tolerance);
u2_median=pi*D2_median*N_median/60;
Q_scale=Qbar*(pi/4)*u2_median*D2_median^2;
Q_scale=Q_scale*1.03;
% Qm_scale=Q_scale*ro;
P_scale=Pbar*ro*u2_median^2;
criterion=sortrows([P_scale;Q_scale]',-2);
criterion=[1:No_fan;criterion']';
%search zone
Qmax=criterion(1,3)*1.02;
Qmin=criterion(end,3)*0.98;
Pmax=max(criterion(:,2))*1.02;
Pmin=min(criterion(:,2))*0.98;
%==================================foregoing code is same as %initial_generate.m
initial_design=[0.876666667	0.343333333	0.116666667	0.323333333	0.163333333	0.883333333	0.556666667	0.723333333	0.636666667	0.523333333	0.29	74.2595	85.18669074	35.9141	41.19881402
    0.79	0.19	0.676666667	0.763333333	0.77	0.73	0.996666667	0.03	0.503333333	0.31	0.53	109.112	77.71372333	62.8896	44.79236908
    0.636666667	0.17	0.743333333	0.316666667	0.303333333	0.756666667	0.91	0.616666667	0.556666667	0.323333333	0.836666667	77.0992	79.92974226	43.8507	45.46059037
    0.563333333	0.43	0.95	0.083333333	0.616666667	0.31	0.29	0.63	0.703333333	0.876666667	0.35	43.4213	80.70271919	17.5793	32.67284286
    0.63	0.436666667	0.47	0.996666667	0.116666667	0.863333333	0.31	0.136666667	0.783333333	0.843333333	0.043333333	96.6471	75.02642797	69.1097	53.64934829
    0.776666667	0.55	0.05	0.03	0.83	0.93	0.216666667	0.01	0.883333333	0.443333333	0.87	88.637	82.01064864	60.5066	55.9832295
    0.136666667	0.51	0.136666667	0.55	0.416666667	0.683333333	0.176666667	0.45	0.603333333	0.236666667	0.883333333	59.0455	77.39665471	42.0742	55.15072833
    0.423333333	0.303333333	0.236666667	0.843333333	0.216666667	0.223333333	0.17	0.223333333	0.39	0.883333333	0.91	48.3592	82.95186274	15.0964	25.89526917
    0.376666667	0.01	0.736666667	0.736666667	0.656666667	0.476666667	0.243333333	0.183333333	0.063333333	0.096666667	0.37	73.9993	87.21420474	18.7936	22.14978896
    0.336666667	0.076666667	0.803333333	0.103333333	0.943333333	0.09	0.67	0.51	0.103333333	0.896666667	0.443333333	20.5269	77.67750843	-27.7197	-104.8963667
    0.503333333	0.616666667	0.956666667	0.176666667	0.576666667	0.49	0.843333333	0.103333333	0.656666667	0.49	0.176666667	74.1946	81.62583052	46.1098	50.72809504
    0.23	0.256666667	0.516666667	0.636666667	0.143333333	0.41	0.63	0.73	0.21	0.87	0.756666667	40.5395	82.50824528	-3.15264	-6.416428283
    0.076666667	0.21	0.763333333	0.376666667	0.736666667	0.976666667	0.963333333	0.596666667	0.596666667	0.57	0.463333333	79.9174	77.03416551	56.9465	54.89200232
    0.323333333	0.39	0.843333333	0.95	0.083333333	0.396666667	0.203333333	0.396666667	0.29	0.623333333	0.283333333	73.0645	83.11104674	41.1039	46.75578638
    0.016666667	0.556666667	0.73	0.296666667	0.156666667	0.83	0.05	0.843333333	0.35	0.476666667	0.623333333	63.0493	80.75675554	41.9487	53.73003207
    0.796666667	0.403333333	0.21	0.016666667	0.223333333	0.056666667	0.976666667	0.603333333	0.25	0.97	0.863333333	8.44837	64.33309905	-77.0496	-586.7214088
    0.03	0.15	0.063333333	0.75	0.956666667	0.35	0.756666667	0.323333333	0.283333333	0.73	0.576666667	42.1798	78.93151972	22.6272	42.34252612
    0.01	0.663333333	0.096666667	0.556666667	0.95	0.923333333	0.083333333	0.556666667	0.263333333	0.756666667	0.196666667	61.0469	78.02208117	40.2092	51.39008641
    0.51	0.903333333	0.97	0.183333333	0.343333333	0.596666667	0.483333333	0.95	0.956666667	0.63	0.723333333	50.4335	77.23681267	30.1762	46.21359823
    0.91	0.423333333	0.943333333	0.45	0.376666667	0.543333333	0.916666667	0.423333333	0.583333333	0.596666667	0.683333333	76.919	83.05235407	36.0471	38.9214175
    0.923333333	0.196666667	0.77	0.823333333	0.15	0.043333333	0.276666667	0.216666667	0.043333333	0.916666667	0.83	40.8432	85.98095652	-55.1914	-116.1860325
    0.283333333	0.756666667	0.203333333	0.443333333	0.356666667	0.776666667	0.883333333	0.676666667	0.403333333	0.483333333	0.09	62.9283	84.4742873	31.353	42.08793706
    0.036666667	0.916666667	0.57	0.19	0.263333333	0.27	0.263333333	0.11	0.456666667	0.716666667	0.003333333	40.2441	78.00194974	19.2505	37.31171857
    0.416666667	0.023333333	0.703333333	0.816666667	0.723333333	0.196666667	0.356666667	0.47	0.016666667	0.43	0.136666667	46.7881	87.49235371	-8.06569	-15.08260011
    0.07	0.27	0.39	0.216666667	0.97	0.803333333	0.21	0.256666667	0.643333333	0.043333333	0.323333333	63.1042	72.35817891	45.4947	52.16631606
    0.716666667	0.136666667	0.583333333	0.063333333	0.103333333	0.603333333	0.296666667	0.863333333	0.356666667	0.45	0.236666667	54.8869	87.04652377	9.10874	14.44578129
    0.87	0.116666667	0.51	0.503333333	0.036666667	0.716666667	0.516666667	0.856666667	0.71	0.116666667	0.503333333	60.5648	64.91123162	19.915	21.34419956
    0.69	0.056666667	0.123333333	0.99	0.35	0.216666667	0.456666667	0.263333333	0.736666667	0.37	0.77	49.0664	75.21796189	18.5096	28.37490395
    0.576666667	0.61	0.916666667	0.863333333	0.976666667	0.843333333	0.736666667	0.463333333	0.243333333	0.59	0.343333333	106.275	89.41399387	27.8726	23.45048681
    0.223333333	0.516666667	0.576666667	0.51	0.696666667	0.876666667	0.656666667	0.91	0.27	0.063333333	0.656666667	72.7057	78.19800221	41.288	44.40696005
    0.836666667	0.723333333	0.79	0.21	0.783333333	0.823333333	0.93	0.13	0.996666667	0.263333333	0.523333333	88.8121	74.04741118	56.2197	46.87337922
    0.13	0.236666667	0.003333333	0.076666667	0.883333333	0.516666667	0.23	0.203333333	0.49	0.83	0.116666667	27.5151	71.21306205	6.21197	16.07747764
    0.83	0.81	0.876666667	0.13	0.283333333	0.376666667	0.57	0.116666667	0.563333333	0.85	0.163333333	64.7063	82.69318711	26.4628	33.81885955
    0.19	0.376666667	0.896666667	0.25	0.803333333	0.103333333	0.536666667	0.35	0.73	0.29	0.556666667	36.2062	75.6574059	20.0468	41.89030842
    0.943333333	0.883333333	0.296666667	0.73	0.496666667	0.65	0.73	0.303333333	0.163333333	0.956666667	0.216666667	62.6447	86.00926133	-49.8441	-68.43442818
    0.41	0.203333333	0.323333333	0.616666667	0.236666667	0.87	0.03	0.796666667	0.23	0.356666667	0.296666667	60.0604	86.90515956	3.43059	4.963935827
    0.523333333	0.33	0.156666667	0.27	0.843333333	0.01	0.023333333	0.003333333	0.416666667	0.536666667	0.983333333	31.0512	84.09606482	-4.95305	-13.41436124
    0.603333333	0.623333333	0.783333333	0.303333333	0.51	0.436666667	0.436666667	0.79	0.176666667	0.27	0.71	44.7221	87.70425515	-28.7487	-56.37891155
    0.356666667	0.283333333	0.81	0.436666667	0.39	0.55	0.823333333	0.93	0.37	0.143333333	0.563333333	59.9379	82.43120221	27.3281	37.58370142
    0.37	0.676666667	0.283333333	0.896666667	0.963333333	0.316666667	0.323333333	0.59	0.136666667	0.976666667	0.85	37.4259	81.65139955	-18.4922	-40.34409355
    0.536666667	0.163333333	0.49	0.796666667	0.443333333	0.19	0.576666667	0.99	0.17	0.496666667	0.903333333	34.6145	87.62525007	-28.6634	-72.56027367
    0.396666667	0.31	0.923333333	0.89	0.663333333	0.23	0.123333333	0.403333333	0.803333333	0.603333333	0.783333333	49.0383	74.13346573	31.9533	48.30528119
    0.436666667	0.496666667	0.91	0.203333333	0.903333333	0.943333333	0.103333333	0.576666667	0.03	0.103333333	0.79	80.9571	88.63916976	18.2552	19.98744733
    0.476666667	0.59	0.07	0.17	0.243333333	0.636666667	0.403333333	0.496666667	0.363333333	0.19	0.43	51.5811	85.44213195	14.6838	24.32315668
    0.43	0.23	0.276666667	0.423333333	0.196666667	0.236666667	0.01	0.043333333	0.903333333	0.436666667	0.243333333	46.6456	76.42297656	30.3053	49.65144047
    0.71	0.443333333	0.303333333	0.716666667	0.016666667	0.89	0.463333333	0.056666667	0.483333333	0.676666667	0.996666667	117.197	87.39698894	62.0394	46.26446714
    0.236666667	0.483333333	0.723333333	0.61	0.99	0.416666667	0.51	0.076666667	0.496666667	0.003333333	0.17	72.7464	69.54566666	40.3115	38.53785399
    0.196666667	0.276666667	0.33	0.196666667	0.816666667	0.556666667	0.643333333	0.916666667	0.75	0.71	0.083333333	37.4107	78.16326228	20.7738	43.40330381
    0.256666667	0.016666667	0.223333333	0.596666667	0.276666667	0.303333333	0.13	0.336666667	0.916666667	0.783333333	0.036666667	38.4771	74.05014574	25.891	49.82788004
    0.11	0.863333333	0.23	0.396666667	0.936666667	0.023333333	0.95	0.29	0.47	0.856666667	0.963333333	23.8345	77.60697402	0.846139	2.755093977
    0.276666667	0.77	0.43	0.57	0.363333333	0.656666667	0.496666667	0.376666667	0.15	0.636666667	0.616666667	60.1388	84.91752771	8.25076	11.65028469
    0.77	0.823333333	0.043333333	0.516666667	0.31	0.616666667	0.636666667	0.23	0.91	0.036666667	0.25	61.5062	53.70706599	23.3645	20.40182524
    0.496666667	0.316666667	0.523333333	0.803333333	0.623333333	0.77	0.43	0.763333333	0.33	0.21	0.016666667	81.8212	83.27286204	41.276	42.0083139
    0.55	0.643333333	0.363333333	0.356666667	0.683333333	0.63	0.016666667	0.97	0.93	0.55	0.263333333	48.862	78.61515655	29.5519	47.54670797
    0.623333333	0.083333333	0.09	0.35	0.09	0.81	0.383333333	0.17	0.943333333	0.803333333	0.416666667	72.8563	79.09177708	49.2166	53.42885043
    0.696666667	0.243333333	0.71	0.883333333	0.93	0.37	0.196666667	0.243333333	0.983333333	0.91	0.396666667	57.6865	75.43998952	35.5362	46.47275455
    0.996666667	0.396666667	0.556666667	0.703333333	0.336666667	0.083333333	0.65	0.523333333	0.036666667	0.163333333	0.276666667	38.0653	88.66160183	-67.2908	-156.7335635
    0.49	0.95	0.716666667	0.776666667	0.123333333	0.936666667	0.896666667	0.25	0.523333333	0.816666667	0.75	102.243	77.7491921	67.3863	51.24292503
    0.596666667	0.79	0.936666667	0.483333333	0.53	0.13	0.003333333	0.903333333	0.45	0.39	0.096666667	39.6606	84.76586872	-3.68173	-7.868893608
    0.056666667	0.336666667	0.55	0.41	0.023333333	0.243333333	0.97	0.443333333	0.716666667	0.776666667	0.73	37.4017	76.59205294	23.0695	47.24224742
    0.543333333	0.543333333	0.45	0.77	0.056666667	0.51	0.856666667	0.416666667	0.65	0.763333333	0.97	66.215	81.26351307	37.4163	45.91980645
    0.063333333	0.876666667	0.176666667	0.903333333	0.063333333	0.796666667	0.39	0.023333333	0.303333333	0.23	0.223333333	102.48	81.96950896	74.1801	59.33359067
    0.676666667	0.13	0.816666667	0.583333333	0.423333333	0.963333333	0.256666667	0.77	0.696666667	0.943333333	0.483333333	82.3318	80.00555175	49.9797	48.56754589
    0.963333333	0.296666667	0.19	0.33	0.316666667	0.47	0.423333333	0.33	0.676666667	0.176666667	0.27	60.853	79.09873637	20.3177	26.40961655
    0.156666667	0.503333333	0.216666667	0.976666667	0.403333333	0.363333333	0.876666667	0.75	0.296666667	0.81	0.376666667	46.3676	81.2720869	21.8071	38.22299464
    0.303333333	0.69	0.343333333	0.676666667	0.476666667	0.816666667	0.336666667	0.703333333	0.616666667	0.963333333	0.99	63.0256	77.30808138	41.5572	50.97464204
    0.57	0.576666667	0.163333333	0.056666667	0.81	0.483333333	0.663333333	0.123333333	0.516666667	0.79	0.856666667	53.9876	82.08094339	26.4565	40.22357873
    0.363333333	0.736666667	0.75	0.003333333	0.596666667	0.743333333	0.343333333	0.05	0.223333333	0.516666667	0.81	59.6669	84.00247953	1.82727	2.572535372
    0.843333333	0.856666667	0.356666667	0.243333333	0.096666667	0.423333333	0.063333333	0.656666667	0.01	0.243333333	0.183333333	33.3524	85.16988244	-65.3696	-166.9301504
    0.663333333	0.53	0.143333333	0.463333333	0.436666667	0.283333333	0.283333333	0.883333333	0.116666667	0.283333333	0.01	24.8434	84.22265948	-51.2912	-173.8844631
    0.656666667	0.936666667	0.13	0.696666667	0.983333333	0.763333333	0.783333333	0.016666667	0.156666667	0.95	0.21	72.8926	85.13830238	-13.7685	-16.08155994
    0.483333333	0.11	0.376666667	0.656666667	0.256666667	0.69	0.303333333	0.283333333	0.51	0.736666667	0.63	78.0888	81.0297658	50.409	52.30749434
    0.296666667	0.97	0.41	0.623333333	0.59	0.156666667	0.596666667	0.55	0.476666667	0.53	0.49	39.1148	83.71460517	7.7525	16.59212054
    0.883333333	0.976666667	0.543333333	0.143333333	0.11	0.676666667	0.763333333	0.19	0.276666667	0.563333333	0.923333333	83.4143	87.89024586	18.8939	19.90773184
    0.203333333	0.716666667	0.15	0.983333333	0.996666667	0.536666667	0.943333333	0.816666667	0.183333333	0.15	0.363333333	52.371	85.87331795	5.77979	9.477186694
    0.723333333	0.37	0.65	0.783333333	0.89	0.91	0.15	0.823333333	0.316666667	0.696666667	0.336666667	90.4729	86.20437994	39.5307	37.6656378
    0.703333333	0.816666667	0.87	0.23	0.03	0.983333333	0.07	0.27	0.143333333	0.35	0.763333333	96.3069	89.50292173	6.05694	5.629023743
    0.736666667	0.93	0.27	0.156666667	0.603333333	0.71	0.036666667	0.65	0.83	0.99	0.39	52.5599	77.84464335	27.5938	40.8682193
    0.263333333	0.363333333	0.976666667	0.756666667	0.91	0.783333333	0.056666667	0.196666667	0.423333333	0.383333333	0.936666667	113.055	83.42271878	78.042	57.58680128
    0.083333333	0.563333333	0.69	0.523333333	0.856666667	0.85	0.85	0.69	0.443333333	0.183333333	0.45	76.2057	79.98885504	49.0938	51.53101214
    0.103333333	0.356666667	0.336666667	0.496666667	0.01	0.61	0.503333333	0.383333333	0.396666667	0.703333333	0.383333333	59.2019	80.79260689	36.229	49.44157797
    0.33	0.063333333	0.17	0.47	0.776666667	0.496666667	0.19	0.983333333	0.31	0.05	0.703333333	38.1486	77.53012231	9.1664	18.62904833
    0.97	0.156666667	0.103333333	0.123333333	0.636666667	0.383333333	0.796666667	0.156666667	0.07	0.276666667	0.816666667	30.7659	84.46233319	-69.5834	-191.0289091
    0.99	0.696666667	0.01	0.603333333	0.75	0.663333333	0.236666667	0.176666667	0.203333333	0.11	0.11	62.0713	88.84570511	-49.9727	-71.52838377
    0.803333333	0.91	0.963333333	0.223333333	0.323333333	0.096666667	0.27	0.31	0.256666667	0.576666667	0.13	46.6745	86.19108714	-8.9591	-16.5442494
    0.116666667	0.67	0.85	0.263333333	0.396666667	0.123333333	0.816666667	0.036666667	0.683333333	0.583333333	0.07	43.2295	78.16857651	27.1503	49.09379712
    0.123333333	0.63	0.883333333	0.116666667	0.556666667	0.076666667	0.61	0.236666667	0.096666667	0.17	0.536666667	28.5321	83.08448795	-9.86345	-28.72202511
    0.31	0.05	0.623333333	0.09	0.65	0.45	0.443333333	0.743333333	0.55	0.863333333	0.57	38.8011	77.87354204	20.1079	40.35641763
    0.85	0.65	0.483333333	0.93	0.69	0.343333333	0.183333333	0.57	0.843333333	0.823333333	0.796666667	51.0157	77.85732474	24.2642	37.03067289
    0.95	0.75	0.856666667	0.536666667	0.87	0.956666667	0.49	0.356666667	0.723333333	0.656666667	0.203333333	108.471	83.15809022	60.6385	46.48783411
    0.243333333	0.89	0.67	0.876666667	0.13	0.336666667	0.583333333	0.483333333	0.09	0.363333333	0.696666667	58.7098	87.13692787	8.04138	11.93499465
    0.856666667	0.45	0.31	0.59	0.703333333	0.623333333	0.743333333	0.89	0.77	0.503333333	0.896666667	54.8368	77.07663943	28.0428	39.41595396
    0.176666667	0.783333333	0.443333333	0.643333333	0.73	0.95	0.41	0.296666667	0.376666667	0.65	0.41	96.816	82.57192338	65.722	56.0526354
    0.39	0.896666667	0.263333333	0.53	0.756666667	0.323333333	0.563333333	0.583333333	0.99	0.343333333	0.69	39.1227	71.6285099	21.9645	40.21410602
    0.003333333	0.71	0.196666667	0.85	0.296666667	0.276666667	0.076666667	0.37	0.796666667	0.123333333	0.843333333	36.4007	54.02318208	25.9169	38.46391437
    0.383333333	0.223333333	0.636666667	0.343333333	0.55	0.176666667	0.836666667	0.276666667	0.57	0.303333333	0.943333333	44.487	79.54683923	22.8121	40.7901286
    0.443333333	0.536666667	0.696666667	0.543333333	0.63	0.696666667	0.983333333	0.963333333	0.236666667	0.41	0.436666667	61.9276	88.47259718	-0.191361	-0.273387063
    0.343333333	0.183333333	0.036666667	0.096666667	0.47	0.15	0.863333333	0.363333333	0.083333333	0.216666667	0.716666667	8.72148	64.45154555	-40.1424	-296.6514539
    0.096666667	0.29	0.083333333	0.11	0.203333333	0.583333333	0.476666667	0.943333333	0.13	0.923333333	0.676666667	10.5523	54.387488	-23.9818	-123.6043194
    0.456666667	0.123333333	0.37	0.05	0.05	0.723333333	0.156666667	0.683333333	0.383333333	0.47	0.95	52.7756	84.84723764	18.5758	29.86428041
    0.763333333	0.99	0.61	0.023333333	0.71	0.836666667	0.69	0.996666667	0.196666667	0.616666667	0.876666667	40.6019	84.08201085	-54.2293	-112.3028378
    0.616666667	0.803333333	0.25	0.956666667	0.43	0.59	0.703333333	0.096666667	0.076666667	0.156666667	0.803333333	86.8718	89.55474577	5.06373	5.220118068
    0.023333333	0.776666667	0.83	0.923333333	0.07	0.896666667	0.87	0.49	0.59	0.543333333	0.123333333	89.4467	74.86307392	67.8519	56.78914711
    0.463333333	0.323333333	0.756666667	0.236666667	0.41	0.296666667	0.716666667	0.896666667	0.41	0.903333333	0.156666667	37.2933	83.21877068	3.06796	6.846051695
    0.163333333	0.73	0.256666667	0.91	0.21	0.163333333	0.116666667	0.803333333	0.123333333	0.456666667	0.61	32.3629	84.33665578	-9.60232	-25.02333093
    0.61	0.596666667	0.63	0.65	0.716666667	0.99	0.47	0.503333333	0.003333333	0.89	0.23	91.1778	87.39467805	11.898	11.40433175
    0.936666667	0.043333333	0.683333333	0.403333333	0.136666667	0.996666667	0.723333333	0.543333333	0.05	0.77	0.456666667	90.9812	89.23728995	-12.9749	-12.72619963
    0.89	0.07	0.89	0.743333333	0.876666667	0.263333333	0.316666667	0.643333333	0.336666667	0.396666667	0.316666667	54.0911	82.84058327	0.093771	0.143610397
    0.516666667	0.35	0.423333333	0.07	0.536666667	0.29	0.136666667	0.43	0.876666667	0.416666667	0.47	39.1743	77.76008203	21.8435	43.35884372
    0.643333333	0.963333333	0.656666667	0.363333333	0.463333333	0.11	0.37	0.21	0.463333333	0.996666667	0.303333333	39.0178	82.11285946	-8.23242	-17.32510666
    0.73	0.523333333	0.823333333	0.01	0.516666667	0.356666667	0.223333333	0.516666667	0.216666667	0.743333333	0.643333333	32.9388	82.84619431	-49.302	-124.002182
    0.45	0.943333333	0.496666667	0.576666667	0.17	0.143333333	0.83	0.836666667	0.19	0.723333333	0.143333333	26.661	82.97339252	-38.1153	-118.6210475
    0.743333333	0.996666667	0.476666667	0.916666667	0.896666667	0.063333333	0.77	0.87	0.976666667	0.983333333	0.956666667	31.6149	80.87270103	7.04717	18.02705916
    0.17	0.09	0.11	0.936666667	0.25	0.67	0.59	0.636666667	0.743333333	0.256666667	0.916666667	60.7052	74.21353868	39.8834	48.75839712
    ];
% criterion=[1	102.040816326531	11.6780045351474
%     2	50	11.4444444444444
%     3	102.040816326531	10.0921026846953
%     4	78.1250000000000	9.49978298611111
%     5	59.1715976331361	8.46482577251808
%     6	87.8906250000000	8.38216145833333
%     7	105.468750000000	7.45081018518519
%     8	78.1250000000000	6.82990933641975
%     9	44.4444444444444	6.78189300411523
%     10	112.500000000000	6.43750000000000];

criterion=[1   25.0000   11.4444
    2   41.3265   11.0357
    3   56.2500   10.0586
    4   34.1542    9.6732
    5   44.4444    9.4193
    6   28.6990    8.5152
    7   51.0204    8.3414
    8   36.6804    7.5346
    9   24.2148    6.7357
    10   69.4444    6.6229];


p=11;

new_load=load('new_result.txt');
new_load0(:,1:p)=new_load(:,2:p+1);
new_load0(:,p+1:p+2)=new_load(:,17:18);
new_load0(:,p+3)=new_load(:,13);
new_load0(:,p+4)=new_load(:,25);
initial_design=[initial_design;new_load0];

Q_c1_design=(criterion(:,3)-Qmin)/(Qmax-Qmin);

father=initial_design;
father_design=initial_design(:,p);
father_pressure=initial_design(:,p+1);
father_efficiency=initial_design(:,p+2);
father_static_pressure=initial_design(:,p+3);
father_static_efficiency=initial_design(:,p+4);

Afmax=dir(strcat(blade_filepath,'/blade*.res'));
for i=1:size(Afmax,1)
    res_file_max(i)=str2num(Afmax(i).name(6:9));
end
No=size(criterion,1);
% Ge=2;
% kn=1;
Ge=fix(max(res_file_max)/1000);
kn=(fix((max(res_file_max)-Ge*1000)/No)+1)*No;
flag1=0;
theta = 0.5*ones(1,p); lob = 0.00001*ones(1,p); upb = ones(1,p);
min_range=0*ones(1,p-1);
max_range=ones(1,p-1);
while(1)
    
    if kn<999-No
        kn=kn+No;
    else
        Ge=Ge+1;
        kn=1;
    end
    
    
    [mS,mY]=dsmerge(father(:,1:p),father(:,p+3:p+4));
    if flag1==0
        [dmodel01, ~] =dacefit(mS, mY(:,1), @regpoly0, @corrgauss, theta, lob, upb);
        [dmodel02, ~] =dacefit(mS, mY(:,2), @regpoly0, @corrgauss, theta, lob, upb);
    elseif flag1==1
        [dmodel01, ~] =dacefit(mS, mY(:,1), @regpoly1, @corrgauss, theta, lob, upb);
        [dmodel02, ~] =dacefit(mS, mY(:,2), @regpoly1, @corrgauss, theta, lob, upb);
    elseif  flag1==2
        [dmodel01, ~] =dacefit(mS, mY(:,1), @regpoly2, @corrgauss, theta, lob, upb);
        [dmodel02, ~] =dacefit(mS, mY(:,2), @regpoly2, @corrgauss, theta, lob, upb);
    end
    save modeldata01 dmodel01
    save modeldata02 dmodel02
    x00=[];
    fval=[];
    for i=1:size(criterion,1)
        
        model_Q=Q_c1_design(i);
        model_P=criterion(i,2);
        save modeldata_c  model_Q model_P
        fitnessfcn=@object;
        options=gaoptimset('paretoFraction',30/100,'populationsize',100,'generations',300,'stallGenLimit',200,'TolFun',1e-100);
        [x00,fval]=gamultiobj(fitnessfcn,p-1,[],[],[],[],min_range,max_range,options);
        y00=sortrows([x00 fval],p);
        y00=y00(1:sum(y00(:,p)<model_P*0.05),:);
        new_offspring(i,1)=model_Q;new_offspring_b(i,1)=model_Q;new_offspring_c(i,1)=model_Q;
        y00_c=y00(find(y00(:,p+1)==min(y00(:,p+1))),1:p-1);
        y00_b=y00(1,1:p-1);
        
        if max(y00(2,1:p-1)-y00_b)<0.01 || max(y00(2,1:p-1)-y00_c)<0.01
            y00_d=rand(1,p-1);
        else
            y00_d=y00(2,1:p-1);
        end
        
        dis_new_father=10000;
        for j=1:size(father,1)
            if max(father(j,2:11)-y00_b)<dis_new_father
                dis_new_father=max(father(j,2:11)-y00_b);
            end
        end
        
        if dis_new_father<0.05
            new_offspring(i,2:p)=y00_c(1,:);
            new_offspring_b(i,2:p)=y00_d(1,:);
            new_offspring_c(i,2:p)=rand(1,p-1);
        else
            new_offspring(i,2:p)=y00_b(1,:);
            new_offspring_b(i,2:p)=y00_c(1,:);
            new_offspring_c(i,2:p)=y00_d(1,:);
        end
        
        %     for i=1:size(new_offspring,1)
        %         dis_new_father=10000;
        %         for j=1:size(father,1)
        %             if max(father(j,1:11)-new_offspring(i,:))<dis_new_father
        %                 dis_new_father=max(father(j,1:11)-new_offspring(i,:));
        %             end
        %         end
        %         if dis_new_father<0.001
        %             new_offspring(i,:)=rand(1,size(new_offspring,2));
        %         end
        %     end
        
        %%
        %initial_design & parametrization
        
        for i2=1:4
            
            if i2==1
                ABC(:,1)=new_offspring(i,:)';
            elseif i2==2
                ABC(:,1)=new_offspring_b(i,:)';
            elseif i2==3
                ABC(:,1)=new_offspring_c(i,:)';
            else
                ABC(1,1)=new_offspring(i,1);
                ABC(2:p,1)=rand(p-1,1);
            end
            
            % ABC=lhsdesign(No_initial,p)';
            %C1
            c1min=Qmin;c1max=Qmax;
            c1=ABC(1,:)*(c1max-c1min)+c1min;%C1:Qin=[Qmin,Qmax]
            %C2
            c2min=0.1;c2max=0.3;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            c2=ABC(2,:)*(c2max-c2min)+c2min;%C2: D1/D2=[0.2~0.4]
            D1=D2_median*c2;
            for i1=1:length(D1)
                D_No_blade(i1,:)=linspace(D1(i1),D2_median,No_blade);%diameter for each blade section
                r_No_blade=D_No_blade/2;
            end
            D1_blade=D1*0.9;
            %C3~C5
            %Angel_incidence
            cz=c1./(pi/4*(D2_median^2-D1.^2));
            u2_shroud=u2_median;
            u2_mid=u2_median/D2_median*(D1+D2_median)/2;
            u2_hub=u2_median/D2_median*D1;
            Angel_incidence=4;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            c3min=0;c3max=2*Angel_incidence;
            c3=ABC(3,:)*(c3max-c3min)+c3min;%C3: i_shroud
            c4min=-Angel_incidence;c4max=Angel_incidence;
            c4=ABC(4,:)*(c4max-c4min)+c4min;%C4: i_mid
            c5min=-3*Angel_incidence;c5max=-Angel_incidence;
            c5=ABC(5,:)*(c5max-c5min)+c5min;%C5: i_hub
            
            beta_1_shroud=atand(cz./u2_shroud)+c3;
            beta_1_mid=atand(cz./u2_mid)+c4;
            beta_1_hub=atand(cz./u2_hub)+c5;
            for i1=1:size(ABC,2)
                beta_1A_c(i1,:)=polyfit([1 No_blade_mid No_blade],[beta_1_hub(i1) beta_1_mid(i1) beta_1_shroud(i1)],2);
                beta_1A(i1,1:No_blade)=polyval(beta_1A_c(i1,:),1:No_blade);% beta1A hub->shroud
            end
            % beta_1A
            %C6~C7
            %C6 total pressure rise
            %C7 coefficient of free-vortex fan
            % beta_2profile
            
            c6min=Pmin;c6max=Pmax;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            c6=ABC(6,:)*(c6max-c6min)+c6min;%C6=[Pmin Pmax]: total pressure rise
            P_theoretical=c6/0.8;
            c7min=0;c7max=1;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            c7=ABC(7,:)*(c7max-c7min)+c7min;%C7=[-1 1]: coefficient of free-vortex fan
            
            D_geom_mean=((D1.^2+D2_median^2)/2).^0.5;
            % D_geom_mean=(D1+D2_median)/2;
            u2_geom_mean=u2_median/D2_median*D_geom_mean;
            dCu_m=P_theoretical./u2_geom_mean/ro;
            rdCu_m=dCu_m.*D_geom_mean.^c7;
            for i1=1:length(rdCu_m)
                dCu(i1,:)=rdCu_m(i1)./D_No_blade(i1,:).^c7(i1); %dCu hub->shroud
            end
            
            u2_No_blade=D_No_blade*pi*N_median/60;
            P_theoretical_No_blade=ro*u2_No_blade.*dCu;
            cz_No_blade=u2_No_blade.*tand(beta_1A);
            cz_ave=sum(cz_No_blade.*D_No_blade.^2,2)./sum(D_No_blade.^2,2);
            cz_ave=repmat(cz_ave,1,No_blade);
            beta_2=atand(cz_ave./(u2_No_blade-dCu));
            beta_2(beta_2<0)=beta_2(beta_2<0)+180;
            behind_angle=3;%<<<<<<<<<<<<<<<<<<behind_angle=3
            beta_2A=beta_2+behind_angle;
            
            %C8
            c8min=0.8;c8max=1.3;%<<<<<<<<<<<<<<<<<<c8:cy_est=[0.8 1.8]
            c8=ABC(8,:)*(c8max-c8min)+c8min;%
            cy=repmat(c8',1,No_blade);
            % t_No_blade=pi*D_No_blade/Z;
            %calculate b1
            wm_No_blade=(cz_No_blade.^2+(u2_No_blade-dCu).^2).^0.5;
            % b_1_No_blade=2*t_No_blade.*P_theoretical_No_blade./(ro.*u2_No_blade.*wm_No_blade.*cy)
            c9min=3;c9max=6.999;%<<<<<<<<<<<<<<<<<<c8:cy_est=[0.8 1.8]
            c9=ABC(9,:)*(c9max-c9min)+c9min;%
            Z=fix(repmat(c9',1,No_blade));%blade number<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            b_No_blade=4*pi.*P_theoretical_No_blade./(cy.*Z.*ro.*(2*pi*N_median/60).*wm_No_blade);
            b_No_blade=b_No_blade*1.1;
            for i1=1:fix(No_blade/4)
                b_No_blade(:,i1)=b_No_blade(:,No_blade-(i1-1)*3);
            end
            b_No_blade(:,6)=1.5*b_No_blade(:,5)-0.5*b_No_blade(:,4);
            b_No_blade(:,8)=1.5*b_No_blade(:,9)-0.5*b_No_blade(:,10);
            b_No_blade(:,7)=(1.5*b_No_blade(:,6)-0.5*b_No_blade(:,5)+1.5*b_No_blade(:,9)-0.5*b_No_blade(:,10))/2;
            
            %C9~C11
            c10min=0.3;c10max=0.8;%<<<<<<<<<<<<<<<<<<c9:a/b=[0.3 0.6]
            c10=ABC(9,:)*(c10max-c10min)+c10min;
            c11min=0.06;c11max=0.18;%<<<<<<<<<<<<<<<<<<max blade thickness:[6% 24%]
            c11=ABC(10,:)*(c11max-c11min)+c11min;
            max_t=c11; % max blade thickness
            
            
            flag0=zeros(1,No_blade);
            file1=sprintf('%s%s%d%s',blade_filepath,'/blade',Ge*1000+i+kn-1,'.crv');
            fid1=fopen(file1,'w');
            fprintf(fid1,'%s\n','## ExportPoints1');
            for j=1:No_blade
                meanline_xy=meanline_parabola(b_No_blade(1,j),beta_1A(1,j),beta_2(1,j),c10(1),No_blade_point);
                blade_profile_xy=blade_profile(meanline_xy,b_No_blade(1,j),max_t(1),profile)*1000;
                fprintf(fid1,'%s%d%s\n','# Profile 1 at    ',(j-1)*100/(No_blade-1),'.0000%');
                fprintf(fid1,'%.8f\t%.8f\t%.8f   le1\n',blade_profile_xy(1,1),((D2_median/2-D1_blade(1)/2)/(No_blade-1)*(j-1)+D1_blade(1)/2)*1000,blade_profile_xy(2,1));
                for k=2:size(blade_profile_xy,2)
                    fprintf(fid1,'%.8f\t%.8f\t%.8f \n',blade_profile_xy(1,k),((D2_median/2-D1_blade(1)/2)/(No_blade-1)*(j-1)+D1_blade(1)/2)*1000,blade_profile_xy(2,k));
                end
                fprintf(fid1,'%.8f\t%.8f\t%.8f   te1\n',blade_profile_xy(1,end)/2+blade_profile_xy(3,end)/2,((D2_median/2-D1_blade(1)/2)/(No_blade-1)*(j-1)+D1_blade(1)/2)*1000,blade_profile_xy(2,end)/2+blade_profile_xy(4,end)/2);
                for k=1:size(blade_profile_xy,2)-1
                    fprintf(fid1,'%.8f\t%.8f\t%.8f \n',blade_profile_xy(3,end-k+1),((D2_median/2-D1_blade(1)/2)/(No_blade-1)*(j-1)+D1_blade(1)/2)*1000,blade_profile_xy(4,end-k+1));
                end
                
                if flag0(j)<max(abs([blade_profile_xy(2,:) blade_profile_xy(4,:)]))
                    flag0(j)=max(abs([blade_profile_xy(2,:) blade_profile_xy(4,:)]));
                end
            end
            fclose(fid1);
            if max(flag0)<=180
                file1=sprintf('%s%s%d%s',blade_filepath,'/shroud',Ge*1000+i+kn-1,'.crv');
                fid1=fopen(file1,'w');
                for j=1:500
                    fprintf(fid1,'%.8f\t%.8f\t%.8f\r\n',0,D2_median/2*1000-0.1,(Zout-Zin)/499*(j-1)+Zin);
                end
                fclose(fid1);
                file1=sprintf('%s%s%d%s',blade_filepath,'/hub',Ge*1000+i+kn-1,'.crv');
                fid1=fopen(file1,'w');
                for j=1:500
                    fprintf(fid1,'%.8f\t%.8f\t%.8f\r\n',0,D1(i)/2*1000,(Zout-Zin)/499*(j-1)+Zin);
                end
                fclose(fid1);
                turbogrid(Ge,i+kn-1,tolerance_median,600000,blade_filepath,blade_filepath);
                fid0=fopen('cfx_turbogrid.sh','w');
                fprintf(fid0,'%s%d%s%d%s\n','/ansys_inc/v190/TurboGrid/bin/cfxtg -batch /test4T/xiongjin/57fanopt/',56,'/blade',1000*Ge+i+kn-1,'.tse');
                fclose(fid0);
                fprintf('%s%d\n','now running: ',1000*Ge+i+kn-1);
                !sh cfx_turbogrid.sh
                fid4=fopen('cfxpre.sh','w');
                cfxpre(Ge,i+kn-1,N_median,c1(1)/Z(1,1),blade_filepath,blade_filepath)
                fprintf(fid4,'%s%d%s%d%s\n','/ansys_inc/v190/CFX/bin/cfx5pre -batch /test4T/xiongjin/57fanopt/',56,'/blade',1000*Ge+i+kn-1,'.pre');
                fclose(fid4);
                %             cfxpost(Ge,i,blade_filepath)
                pause(5);
                !sh cfxpre.sh
                pause(5);
                !pkill SolverManager
            end
            
            fid1=fopen('cfx_solve.sh','w');
            fprintf(fid1,'%s%d%s\n','echo "',1000*Ge+i+kn-1,' start"');
            fprintf(fid1,'%s%d%s%d%s%d%s\n','/ansys_inc/v190/CFX/bin/cfx5solve -def /test4T/xiongjin/57fanopt/',56,'/blade',1000*Ge+i+kn-1,'.def -part 110 -start-method "Platform MPI Local Parallel" ;');
            fclose(fid1);
            !sh cfx_solve.sh
            AF0=dir(strcat(blade_filepath,'/blade',num2str(1000*Ge+i+kn-1),'*.res'));
            if size(AF0,1)>0
                ABC_final(:,i)=ABC(:,1);
                disp(ABC_final')
                if max(AF0(1).name~=strcat('blade',num2str(1000*Ge+i+kn-1),'_001.res'))~=0
                    movefile(strcat(AF0(1).folder,'/',AF0(1).name),strcat(AF0(1).folder,'/',strcat('blade',num2str(1000*Ge+i+kn-1),'_001.res')));
                    %                     pause(1);
                    %                     delete(strcat(AF0(1).folder,'/',AF0(1).name));
                end
                break;
            end
            clear dCu beta_1A_c beta_1A D_No_blade
        end
        
    end
    
    %=============================
    Af=dir(strcat(blade_filepath,'/blade*.res'));
    Af_done=dir(strcat(blade_filepath,'/output*.txt'));
    
    for i=1:size(Af_done,1)
        res_done(i)=str2num(Af_done(i).name(7:10));
    end
    newcase=0;
    fid1=fopen('cfx_post.sh','w');
    for i=1:size(Af,1)
        res_file(i)=str2num(Af(i).name(6:9));
        if size(find(res_done==res_file(i)),2)==0
            newcase=newcase+1;
            new_res(newcase)=res_file(i);
            cfxpost(res_file(i),blade_filepath);
            fprintf(fid1,'%s%d%s\n','/ansys_inc/v190/CFX/bin/cfx5post -batch /test4T/xiongjin/57fanopt/56/blade',res_file(i),'.cse');
        end
    end
    fclose(fid1);
    !sh cfx_post.sh
    
    if newcase>0
        no_title=1000*Ge+kn-1;
        for i=1:length(new_res)
            file1=sprintf('%s%d%s','output',new_res(i),'.txt');
            Output_data(i,1)=new_res(i);
            Outputdata(i,1:5)=load(file1);
            Output_data(i,2:12)=ABC_final(:,new_res(i)-no_title)';
            c9min=3;c9max=6.999;%<<<<<<<<<<<<<<<<<<c8:cy_est=[0.8 1.8]
            c9=ABC_final(9,new_res(i)-no_title)*(c9max-c9min)+c9min;%
            z=fix(c9);
            Output_data(i,13)=Outputdata(i,5);
            Output_data(i,14)=z;
            Output_data(i,15)=Outputdata(i,1);
            Output_data(i,16)=Outputdata(i,2)*z;
            Output_data(i,17)=Outputdata(i,3);
            Output_data(i,18)=-Outputdata(i,2)/1.185*Outputdata(i,3)/(N_median*Outputdata(i,4)*pi/30)*100;
            Output_data(i,19)=-3600*Outputdata(i,2)/1.185/(N_median*Outputdata(i,4)*pi/30)*100;
            c1min=Qmin;c1max=Qmax;
            c1=ABC_final(1,new_res(i)-no_title)*(c1max-c1min)+c1min;%C1:Qin=[Qmin,Qmax]
            Output_data(i,20)=c1;
            c6min=Pmin;c6max=Pmax;%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            c6=ABC_final(6,new_res(i)-no_title)*(c6max-c6min)+c6min;%C6=[Pmin Pmax]: total pressure rise
            Output_data(i,21)=c6;
            c8min=1.2;c8max=1.8;%<<<<<<<<<<<<<<<<<<c8:cy_est=[0.8 1.8]
            c8=ABC_final(8,new_res(i)-no_title)*(c8max-c8min)+c8min;%
            Output_data(i,22)=c8;
            Output_data(i,23)=Output_data(i,17)/Output_data(i,18)*100;
            Output_data(i,24)=Output_data(i,22)/Output_data(i,21)*Output_data(i,23);
            Output_data(i,25)=-Outputdata(i,2)/1.185*Outputdata(i,5)/(N_median*Outputdata(i,4)*pi/30)*100;
        end
        fid1=fopen('new_result.txt','a');
        for i=1:size(Output_data,1)
            for j=1:size(Output_data,2)
                fprintf(fid1,'%g ',Output_data(i,j));
            end
            fprintf(fid1,'\n');
        end
        fclose(fid1);
        father=[father;[Output_data(:,2:12) Output_data(:,17:18) Output_data(:,13) Output_data(:,25)]];
        flag1=0;
    elseif newcase==0
        if flag1==0
            flag1=1;
        elseif flag1==1
            flag1=2;
        elseif flag1==2
            flag1=3;
        else
            error('converged')
        end
    end
    clear Output_data new_res Outputdata res_file res_done new_offspring new_offspring_b new_offspring_c beta_1A_c beta_1A D_No_blade new_offspring dCu ABC_final
    
end